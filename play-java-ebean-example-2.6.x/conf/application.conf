# Configuration

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
db {
  # You can declare as many datasources as you want.
  # By convention, the default datasource is named `default`

 # default.driver=com.mysql.jdbc.Driver
  #default.url="jdbc:mysql://localhost/project_se"
  #default.username=root
  #default.password=" "

# Default database configuration using MySQL database engine
# Connect to playdb as playdbuser
 default.url="jdbc:mysql://localhost/project_se"
  default.driver=com.mysql.jdbc.Driver
  default.username=root
  default.password=""
  # https://www.playframework.com/documentation/latest/Developing-with-the-H2-Database
  #default.driver = org.h2.Driver
  #default.url = "jdbc:h2:mem:play"
  #default.username = sa
  #default.password = ""
 

  # You can turn on SQL logging for any datasource
  # https://www.playframework.com/documentation/latest/Highlights25#Logging-SQL-statements
  default.logSql=true
}

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
ebean.default="models.*"

# Assets configuration
# ~~~~~
"assets.cache./public/stylesheets/bootstrap.min.css"="max-age=3600"

# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

# Set Hikari to fixed size
play.db {
  # The combination of these two settings results in "db.default" as the
  # default JDBC pool:
  #config = "db"
  #default = "default"
  config = "db"
  default = "default"


  # Play uses HikariCP as the default connection pool.  You can override
  # settings by changing the prototype:
    prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool

